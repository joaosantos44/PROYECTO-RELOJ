;******************************************************************************
;Universidad del Valle de Guatemala
;IE2023: Programacion de Microcontroladores 
;Antirebote.asm
;Autor; Joao Santos
;Proyecto Multiplexado
;Hardware: Atemega328P
;Creado: 05/03/2024
;Ultima modificacion: 05/03/2024
;******************************************************************************

;******************************************************************************
;ENCABEZADO
;******************************************************************************
.include "M328PDEF.inc"

.cseg
.org 0x00
	JMP MAIN
.org 0x08
	JMP ISR_PCINT1
.org 0x001A
	JMP INT_TMR1
.org 0x0020
	JMP INT_TMR0

;******************************************************************************
;STACK POINTER
;******************************************************************************
Main: 
	LDI R16, LOW(RAMEND)
	OUT SPL, R16
	LDI R17, HIGH(RAMEND)
	OUT SPH, R17

;******************************************************************************
;TABLA
;EMPIEZA 4C			    0
;TERMINA EN 55		9
;******************************************************************************

TABLAVALORES: .DB 0x40, 0x79, 0x24, 0x30, 0x19, 0x12, 0x02, 0x78, 0x00, 0x10, 0x08, 0x03, 0x46, 0x21, 0x06, 0x0E

;******************************************************************************
;SETUP
;******************************************************************************
SETUP:
	LDI ZH, HIGH(TABLAVALORES << 1)					;CONFIGURAR TABLA
	LDI ZL, LOW(TABLAVALORES << 1)						;INICIA EN 0x4C POR NO SE QUE MOTIVOS =)

	LDI R16, (1 << CLKPCE)											;PRESCALER PARA 1 MHz
	STS CLKPR, R16 
	LDI R16, 0b0000_0101											;1/32
	STS CLKPR, R16															;DIVIDIR LA FRECUENCIA POR 16

	LDI R16, 0b0000_0000													;PUERTO C COMO ENTRADAS
	OUT	DDRC, R16
	LDI R16, 0b0000_1111													;PUERTOS C CON PULLUPS
	OUT PORTC, R16
	
	LDI R16, 0b1111_1111													;PUERTO D COMO SALIDA
	OUT DDRD, R16

	LDI R16, 0b1111_1111													;PUERTO B COMO SALIDA
	OUT DDRB, R16

	LDI R16, (1 << PCINT3)|(1 << PCINT2)|(1 << PCINT1)|(1 << PCINT0)
	STS PCMSK1, R16
	
	LDI R16, (1 << PCIE1)
	STS PCICR, R16

	CALL Timer0																	;SUBRUTINA DEL TIMER0
	CALL Timer1																	;SUBRUTINA DEL TIMER1

	SEI

	LDI R17, 0x00
	LDI R18, 0x00
	LDI R19, 0x00
	LDI R20, 0x00
	LDI R21, 0x00
	LDI R22, 0x59
	LDI R23, 0x23
	LDI R24, 0x20
	LDI R25, 0x04
	LDI R26, 0x00
	LDI R27, 0x00
	LDI R28, 0x00
	LDI R29, 0x00

	LDI ZL, LOW (TABLAVALORES << 1)
	LDI ZH, HIGH (TABLAVALORES << 1)	
	LPM R17, Z 
	OUT PORTD, R17 ; Display 1 en 0 para minutos

	LDI ZL, LOW (TABLAVALORES << 1)
	LDI ZH, HIGH (TABLAVALORES << 1)
	LPM R18, Z
	OUT PORTD, R18 ; Display 2 en 0 para minutos

	LDI ZL, LOW (TABLAVALORES << 1)
	LDI ZH, HIGH (TABLAVALORES << 1)
	LPM R19, Z
	OUT PORTD, R19 ; Display 3 en 0 para horas

	LDI ZL, LOW (TABLAVALORES << 1)
	LDI ZH, HIGH (TABLAVALORES << 1)
	LPM R20, Z
	OUT PORTD, R20 ; Display 4 en 0 para horas

	
;******************************************************************************
;CODE
;******************************************************************************
LOOP:
	;DECENA HORAS/MES
	CBI PORTB, PB2
	SBI	PORTB, PB5
	OUT PORTD, R20

	CALL RETARDO
	CALL RETARDO

	;UNIDAD HORAS/MES
	CBI PORTB, PB5
	SBI PORTB, PB4
	OUT PORTD, R19

	CALL RETARDO
	CALL RETARDO

	;DECENA MINUTOS/DIA
	CBI PORTB, PB4
	SBI PORTB, PB3
	OUT PORTD, R18

	CALL RETARDO
	CALL RETARDO

	;UNIDAD MINUTOS/DIA
	CBI PORTB, PB3
	SBI PORTB, PB2
	OUT PORTD, R17

	CALL RETARDO
	CALL RETARDO
	
	RJMP LOOP

RETARDO:
	LDI	R16, 255
delay:
	DEC	R16
	BRNE delay
	RET
;******************************************************************************
;ESTADOS
;******************************************************************************
ISR_PCINT1:
	PUSH R16
	IN R16, SREG
	PUSH R16

	CPI R28, 0x0000
	BREQ ESTADO_0
	CPI R28, 0x0001
	BREQ ESTADO_1
	CPI R28, 0x0002
	BREQ ESTADO_2
	RJMP ISR_POP_PC_GENERAL

ESTADO_0:
	SBI PORTB, PB0
	CBI PORTB, PB1

	LDI R16, (1 << TOIE0)
	STS TIMSK0, R16

	IN R16, PINC
	SBRS R16, 1
	JMP ESTADO_0_SETTER

	SBRS R16, 0
	LDI R28, 0X0001

	RJMP ISR_POP_PC_GENERAL

ESTADO_1:
	CBI PORTB, PB0
	SBI PORTB, PB1

	LDI R16, (0 << TOIE0)
	STS TIMSK0, R16

	IN R16, PINC
	SBRS R16, 1
	JMP ESTADO_1_SETTER

	SBRS R16, 0
	LDI R28, 0X0002

	RJMP ISR_POP_PC_GENERAL

ESTADO_2:
	SBI PORTB, PB0
	SBI PORTB, PB1

	LDI R16, (1 << TOIE0)
	STS TIMSK0, R16

	IN R16, PINC
	SBRS R16, 1
	JMP ESTADO_2_SETTER

	SBRS R16, 0
	LDI R28, 0X0000

	RJMP ISR_POP_PC_GENERAL


ESTADO_0_SETTER:
	CBI PORTB, PB0
	SBI PORTB, PB1

	IN R16, PINC
	SBRS R16, 1
	LDI R31,  0X0001

	SBRS R16, 2
	LDI R31, 0X0002

	SBRS R16, 3
	LDI R31, 0X0003

	RJMP ISR_POP_PC_GENERAL

ESTADO_1_SETTER:
	SBI PORTB, PB0
	CBI PORTB, PB1
	RJMP ISR_POP_PC_GENERAL

ESTADO_2_SETTER:
	CBI PORTB, PB0
	CBI PORTB, PB1
	RJMP ISR_POP_PC_GENERAL


;******************************************************************************
;TIMERS
;******************************************************************************
INT_TMR0:
	PUSH R16
	IN R16, SREG
	PUSH R16

	LDI R16, 12							; aprox 500ms
	OUT TCNT0, R16

DOS_PUNTOS:
	SBRC R19, 0b0000_0111
	JMP APAGAR
	SBR R19, 0b1000_0000
	SBR R20, 0b1000_0000
	JMP SALIR

APAGAR:
	CBR R19, 0b1000_0000
	CBR R20, 0b1000_0000
	JMP SALIR

SALIR:
	SBI TIFR0, TOV0
	
	POP R16
	OUT SREG, R16
	POP R16
	RETI


INT_TMR1:
	PUSH R16
	IN R16, SREG
	PUSH R16

	LDI R16, 0xBB  //1F
	STS TCNT1L, R16
	LDI R16, 0x8C	//1B														;JUNTO CON EL HL HACEN APROX 1 MIN (60 SEC)
	STS TCNT1H, R16	
	

;******************************************************************************
;SET MINS/HORAS/DIA/MES
;******************************************************************************


MINUTOS:
	MOV R29, R22
	CBR R29, 0XF0
	CPI R29, 9
	BRNE NO_OVER_UNIMIN

	MOV R29, R22
	SWAP R29
	CBR R29, 0XF0
	CPI R29, 5
	BREQ HORAS

	MOV R29, R22
	SWAP R29
	CBR R29, 0XF0
	INC R29
	SWAP R29
	CBR R22, 0XF0
	OR R22, R29
	CBR R22, 0X0F
	JMP ISR_POP_GENERAL

NO_OVER_UNIMIN:
	MOV R29, R22
	CBR R29, 0XF0
	INC R29
	CBR R22, 0X0F
	OR R22, R29

	JMP ISR_POP_GENERAL

HORAS:
	MOV R29, R23
	SWAP R29
	CBR R29, 0XF0
	CPI R29, 2
	BREQ	HORAS_DESPUES_DE_20
	
	CLR R22
	MOV R29, R23
	CBR R29, 0XF0
	CPI R29, 9
	BRNE NO_OVER_UNIHORA

	MOV R29, R23
	SWAP R29
	CBR R29, 0XF0
	INC R29
	SWAP R29
	CBR R23, 0XF0
	OR R23, R29
	CBR R23, 0X0F
	JMP ISR_POP_GENERAL

NO_OVER_UNIHORA:
	MOV R29, R23
	CBR R29, 0XF0
	INC R29
	CBR R23, 0X0F
	OR R23, R29

	JMP ISR_POP_GENERAL

HORAS_DESPUES_DE_20:
	CLR R22
	MOV R29, R23
	CBR R29, 0XF0
	CPI R29, 3
	BREQ DIAS

	CLR R22
	MOV R29, R23
	CBR R29, 0XF0
	CPI R29, 4
	BRNE NO_OVER_UNIHORA

	MOV R29, R23
	SWAP R29
	CBR R29, 0XF0
	INC R29
	SWAP R29
	CBR R23, 0XF0
	OR R23, R29
	CBR R23, 0X0F
	JMP ISR_POP_GENERAL

DIAS:
	CLR R23
	CLR R22

	MOV R29, R25
	CBR R29, 0XF0
	CPI R29, 2
	BREQ FEBRERO_UNI_SALTIN
	CPI R29, 4
	BREQ DIAS_HASTA_30
	CPI R29, 6
	BREQ DIAS_HASTA_30
	CPI R29, 9
	BREQ DIAS_HASTA_30

	CLR R29
	MOV R29, R24
	SWAP R29
	CBR R29, 0XF0
	CPI R29, 3
	BREQ DIAS_HASTA_31_SALTIN

	MOV R29, R24
	CBR R29, 0XF0
	CPI R29, 9
	BRNE NO_OVER_UNIDIA

	MOV R29, R24
	SWAP R29
	CBR R29, 0XF0
	INC R29
	SWAP R29
	CBR R24, 0XF0
	OR R24, R29
	CBR R24, 0X0F
	JMP ISR_POP_GENERAL

FEBRERO_UNI_SALTIN:
 JMP FEBRERO_UNI

DIAS_HASTA_31_SALTIN:
 JMP DIAS_HASTA_31

NO_OVER_UNIDIA:
	MOV R29, R24
	CBR R29, 0XF0
	INC R29
	CBR R24, 0X0F
	OR R24, R29

	JMP ISR_POP_GENERAL

DIAS_HASTA_30:
	CLR R23
	CLR R22

	MOV R29, R24
	SWAP R29
	CBR R29, 0XF0
	CPI R29, 3
	BREQ DIAS_HASTA_30_UNIS_FINAL

	MOV R29, R24
	CBR R29, 0XF0
	CPI R29, 9
	BRNE NO_OVER_UNIDIA

	MOV R29, R24
	SWAP R29
	CBR R29, 0XF0
	INC R29
	SWAP R29
	CBR R24, 0XF0
	OR R24, R29
	CBR R24, 0X0F
	JMP ISR_POP_GENERAL

DIAS_HASTA_30_UNIS_FINAL:
	CLR R23
	MOV R29, R24
	CBR R29, 0XF0
	CPI R29, 0
	BREQ MES_SALTIN

	CLR R23
	MOV R29, R24
	CBR R29, 0XF0
	CPI R29, 1
	BRNE NO_OVER_UNIDIA

	MOV R29, R24
	SWAP R29
	CBR R29, 0XF0
	INC R29
	SWAP R29
	CBR R24, 0XF0
	OR R24, R29
	CBR R24, 0X0F
	JMP ISR_POP_GENERAL

MES_SALTIN:
	JMP MES

FEBRERO_UNI:
	CLR R23
	CLR R22

	MOV R29, R24
	SWAP R29
	CBR R29, 0XF0
	CPI R29, 2
	BREQ FEBRERO

	MOV R29, R24
	CBR R29, 0XF0
	CPI R29, 9
	BRNE NO_OVER_UNIDIA

	MOV R29, R24
	SWAP R29
	CBR R29, 0XF0
	INC R29
	SWAP R29
	CBR R24, 0XF0
	OR R24, R29
	CBR R24, 0X0F
	JMP ISR_POP_GENERAL

FEBRERO:
	CLR R23
	MOV R29, R24
	CBR R29, 0XF0
	CPI R29, 8
	BREQ MES

	CLR R23
	MOV R29, R24
	CBR R29, 0XF0
	CPI R29, 9
	BRNE NO_OVER_UNIDIA_SALTIN

	MOV R29, R24
	SWAP R29
	CBR R29, 0XF0
	INC R29
	SWAP R29
	CBR R24, 0XF0
	OR R24, R29
	CBR R24, 0X0F
	JMP ISR_POP_GENERAL

DIAS_HASTA_31:
	CLR R23
	MOV R29, R24
	CBR R29, 0XF0
	CPI R29, 1
	BREQ MES

	CLR R23
	MOV R29, R24
	CBR R29, 0XF0
	CPI R29, 2
	BRNE NO_OVER_UNIDIA_SALTIN

	MOV R29, R24
	SWAP R29
	CBR R29, 0XF0
	INC R29
	SWAP R29
	CBR R24, 0XF0
	OR R24, R29
	CBR R24, 0X0F
	JMP ISR_POP_GENERAL

NO_OVER_UNIDIA_SALTIN:
	JMP NO_OVER_UNIDIA

MES:
	LDI R24, 0X01
	MOV R29, R25
	SWAP R29
	CBR R29, 0XF0
	CPI R29, 1
	BREQ	ULTIMOS_MESES
	
	LDI R24, 0X01
	MOV R29, R25
	CBR R29, 0XF0
	CPI R29, 9
	BRNE NO_OVER_UNIMES

	MOV R29, R25
	SWAP R29
	CBR R29, 0XF0
	INC R29
	SWAP R29
	CBR R25, 0XF0
	OR R25, R29
	CBR R25, 0X0F
	JMP ISR_POP_GENERAL

NO_OVER_UNIMES:
	MOV R29, R25
	CBR R29, 0XF0
	INC R29
	CBR R25, 0X0F
	OR R25, R29

	JMP ISR_POP_GENERAL

ULTIMOS_MESES:
	LDI R24, 0X01
	MOV R29, R25
	CBR R29, 0XF0
	CPI R29, 2
	BREQ FIN_DE_YEAR

	LDI R24, 0X01
	MOV R29, R25
	CBR R29, 0XF0
	CPI R29, 3
	BRNE NO_OVER_UNIMES

	MOV R29, R25
	SWAP R29
	CBR R29, 0XF0
	INC R29
	SWAP R29
	CBR R25, 0XF0
	OR R25, R29
	CBR R25, 0X0F
	JMP ISR_POP_GENERAL

FIN_DE_YEAR:
	CLR R24
	CLR R25
	LDI R24, 0X01
	LDI R25, 0X01


;******************************************************************************
;DISPLAY MULTIPLEX CON LA INTERRUPCION
;******************************************************************************

ISR_POP_GENERAL:
	CPI R28, 0x0000
	BREQ ISR_POP_HORA
	CPI R28, 0x0001
	BREQ ISR_POP_FECHA
	CPI R28, 0x0002
	BREQ ISR_POP_ALARMA

ISR_POP_HORA:															;A LO QUE TENGO TENGO QUE MANDAR TODO
	MOV R29, R23																;MOVEMOS A MI REGISTRO DESCARTABLE
	SWAP R29
	CBR R29, 0xF0																;DECENA HORAS
	LDI ZL, LOW(TABLAVALORES << 1)
	LDI ZH, HIGH(TABLAVALORES << 1)
	ADD ZL, R29																	;VALOR DECENA HORAS
	LPM R20, Z																	;DISPLAY DECENA HORAS

	MOV R29, R23																;MOVEMOS A MI REGISTRO DESCARTABLE
	//SWAP R29
	CBR R29, 0xF0																;UNIDAD HORAS
	LDI ZL, LOW(TABLAVALORES << 1)
	LDI ZH, HIGH(TABLAVALORES << 1)
	ADD ZL, R29																	;VALOR UNIDAD HORAS
	LPM R19, Z																	;DISPLAY UNIDAD HORAS

	MOV R29, R22																;MOVEMOS A MI REGISTRO DESCARTABLE
	SWAP R29
	CBR R29, 0xF0																;DECENA MINS
	LDI ZL, LOW(TABLAVALORES << 1)
	LDI ZH, HIGH(TABLAVALORES << 1)
	ADD ZL, R29																	;VALOR DECENA MINS
	LPM R18, Z																	;DISPLAY DECENA MINS

	MOV R29, R22																;MOVEMOS A MI REGISTRO DESCARTABLE
	//SWAP R29																	;UNIDAD MINS
	CBR R29, 0xF0
	LDI ZL, LOW(TABLAVALORES << 1)
	LDI ZH, HIGH(TABLAVALORES << 1)
	ADD ZL, R29																	;VALOR UNIDAD MINS
	LPM R17, Z																	;DISPLAY UNIDAD MINS

	SBI PCIFR, PCIF0
	POP R16
	OUT SREG, R16
	POP R16
	RETI

ISR_POP_FECHA:															;A LO QUE TENGO TENGO QUE MANDAR TODO
	MOV R29, R25
	SWAP R29
	CBR R29, 0xF0
	LDI ZL, LOW(TABLAVALORES << 1)
	LDI ZH, HIGH(TABLAVALORES << 1)
	ADD ZL, R29
	LPM R20, Z

	MOV R29, R25
	//SWAP R29
	CBR R29, 0xF0
	LDI ZL, LOW(TABLAVALORES << 1)
	LDI ZH, HIGH(TABLAVALORES << 1)
	ADD ZL, R29
	LPM R19, Z

	MOV R29, R24
	SWAP R29
	CBR R29, 0xF0
	LDI ZL, LOW(TABLAVALORES << 1)
	LDI ZH, HIGH(TABLAVALORES << 1)
	ADD ZL, R29
	LPM R18, Z

	MOV R29, R24
	//SWAP R29
	CBR R29, 0xF0
	LDI ZL, LOW(TABLAVALORES << 1)
	LDI ZH, HIGH(TABLAVALORES << 1)
	ADD ZL, R29
	LPM R17, Z

	SBI PCIFR, PCIF0
	POP R16
	OUT SREG, R16
	POP R16
	RETI

ISR_POP_ALARMA:														;A LO QUE TENGO TENGO QUE MANDAR TODO
	MOV R29, R27
	SWAP R29
	CBR R29, 0xF0
	LDI ZL, LOW(TABLAVALORES << 1)
	LDI ZH, HIGH(TABLAVALORES << 1)
	ADD ZL, R29
	LPM R20, Z

	MOV R29, R27
	//SWAP R29
	CBR R29, 0xF0
	LDI ZL, LOW(TABLAVALORES << 1)
	LDI ZH, HIGH(TABLAVALORES << 1)
	ADD ZL, R29
	LPM R19, Z

	MOV R29, R26
	SWAP R29
	CBR R29, 0xF0
	LDI ZL, LOW(TABLAVALORES << 1)
	LDI ZH, HIGH(TABLAVALORES << 1)
	ADD ZL, R29
	LPM R18, Z

	MOV R29, R26
	//SWAP R29
	CBR R29, 0xF0
	LDI ZL, LOW(TABLAVALORES << 1)
	LDI ZH, HIGH(TABLAVALORES << 1)
	ADD ZL, R29
	LPM R17, Z

	SBI PCIFR, PCIF0
	POP R16
	OUT SREG, R16
	POP R16
	RETI

;******************************************************************************
;ESTADOS CON LA INTERRUPCION
;******************************************************************************

ISR_POP_PC_GENERAL:
	CPI R28, 0x0000
	BREQ ISR_POP_PC_HORA
	CPI R28, 0x0001
	BREQ ISR_POP_PC_FECHA
	CPI R28, 0x0002
	BREQ ISR_POP_PC_ALARMA

ISR_POP_PC_HORA:																;A LO QUE TENGO TENGO QUE MANDAR TODO
	MOV R29, R23																;MOVEMOS A MI REGISTRO DESCARTABLE
	SWAP R29
	CBR R29, 0xF0																;DECENA HORAS
	LDI ZL, LOW(TABLAVALORES << 1)
	LDI ZH, HIGH(TABLAVALORES << 1)
	ADD ZL, R29																	;VALOR DECENA HORAS
	LPM R20, Z																	;DISPLAY DECENA HORAS
		
	MOV R29, R23																;MOVEMOS A MI REGISTRO DESCARTABLE
	//SWAP R29
	CBR R29, 0xF0																;UNIDAD HORAS
	LDI ZL, LOW(TABLAVALORES << 1)
	LDI ZH, HIGH(TABLAVALORES << 1)
	ADD ZL, R29																	;VALOR UNIDAD HORAS
	LPM R19, Z																	;DISPLAY UNIDAD HORAS

	MOV R29, R22																;MOVEMOS A MI REGISTRO DESCARTABLE
	SWAP R29
	CBR R29, 0xF0																;DECENA MINS
	LDI ZL, LOW(TABLAVALORES << 1)
	LDI ZH, HIGH(TABLAVALORES << 1)
	ADD ZL, R29																	;VALOR DECENA MINS
	LPM R18, Z																	;DISPLAY DECENA MINS

	MOV R29, R22																;MOVEMOS A MI REGISTRO DESCARTABLE
	//SWAP R29																	;UNIDAD MINS
	CBR R29, 0xF0
	LDI ZL, LOW(TABLAVALORES << 1)
	LDI ZH, HIGH(TABLAVALORES << 1)
	ADD ZL, R29																	;VALOR UNIDAD MINS
	LPM R17, Z																	;DISPLAY UNIDAD MINS

	SBI PCIFR, PCIF0
	POP R16
	OUT SREG, R16
	POP R16
	RETI

ISR_POP_PC_FECHA:																;A LO QUE TENGO TENGO QUE MANDAR TODO
	MOV R29, R25
	SWAP R29
	CBR R29, 0xF0
	LDI ZL, LOW(TABLAVALORES << 1)
	LDI ZH, HIGH(TABLAVALORES << 1)
	ADD ZL, R29
	LPM R20, Z

	MOV R29, R25
	//SWAP R29
	CBR R29, 0xF0
	LDI ZL, LOW(TABLAVALORES << 1)
	LDI ZH, HIGH(TABLAVALORES << 1)
	ADD ZL, R29
	LPM R19, Z

	MOV R29, R24
	SWAP R29
	CBR R29, 0xF0
	LDI ZL, LOW(TABLAVALORES << 1)
	LDI ZH, HIGH(TABLAVALORES << 1)
	ADD ZL, R29
	LPM R18, Z

	MOV R29, R24
	//SWAP R29
	CBR R29, 0xF0
	LDI ZL, LOW(TABLAVALORES << 1)
	LDI ZH, HIGH(TABLAVALORES << 1)
	ADD ZL, R29
	LPM R17, Z

	SBI PCIFR, PCIF0
	POP R16
	OUT SREG, R16
	POP R16
	RETI

ISR_POP_PC_ALARMA:															;A LO QUE TENGO TENGO QUE MANDAR TODO
	MOV R29, R27
	SWAP R29
	CBR R29, 0xF0
	LDI ZL, LOW(TABLAVALORES << 1)
	LDI ZH, HIGH(TABLAVALORES << 1)
	ADD ZL, R29
	LPM R20, Z

	MOV R29, R27
	//SWAP R29
	CBR R29, 0xF0
	LDI ZL, LOW(TABLAVALORES << 1)
	LDI ZH, HIGH(TABLAVALORES << 1)
	ADD ZL, R29
	LPM R19, Z

	MOV R29, R26
	SWAP R29
	CBR R29, 0xF0
	LDI ZL, LOW(TABLAVALORES << 1)
	LDI ZH, HIGH(TABLAVALORES << 1)
	ADD ZL, R29
	LPM R18, Z

	MOV R29, R26
	//SWAP R29
	CBR R29, 0xF0
	LDI ZL, LOW(TABLAVALORES << 1)
	LDI ZH, HIGH(TABLAVALORES << 1)
	ADD ZL, R29
	LPM R17, Z

	SBI PCIFR, PCIF0
	POP R16
	OUT SREG, R16
	POP R16
	RETI
;******************************************************************************
;SUBRUTINAS
;******************************************************************************
Timer0:
	LDI R16, (1 << CS02) | (1 << CS00)											;PRESCALER 1024
	OUT TCCR0B, R16
		
	LDI R16, 12																	;500ms
	OUT TCNT0, R16

	LDI R16, (1 << TOIE0)
	STS TIMSK0, R16

	RET

Timer1:
	LDI R16, (1 << CS12) | (1 << CS10)
	STS TCCR1B, R16

	LDI R16, 0xBB  //1F
	STS TCNT1L, R16
	LDI R16, 0x8C  //1B															;JUNTO CON EL HL HACEN APROX 1 MIN (60 SEC)
	STS TCNT1H, R16

	LDI R16, (1 << TOIE1)
	STS TIMSK1, R16

	RET
